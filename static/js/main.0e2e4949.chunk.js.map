{"version":3,"sources":["api/api.js","api/users.js","api/posts.js","components/User/User.jsx","components/UsersList/UsersList.jsx","App.jsx","index.jsx"],"names":["BASE_URL","getUsers","a","fetch","response","json","result","getPosts","userId","User","user","useState","userPosts","setUserPosts","showUserPosts","useCallback","requestedPosts","fetchData","className","src","avatar","alt","name","role","city","phone","type","onClick","id","map","post","content","UsersList","users","App","usersList","setUsersList","useEffect","requestedUsers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAAaA,EAAW,qDCEjB,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,WADvB,cACCI,EADD,gBAEgBA,EAASC,OAFzB,cAECC,EAFD,yBAIEA,GAJF,4C,wCCOA,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,iBAAAN,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,kBAAsBQ,EAAtB,WADvB,cACCJ,EADD,gBAEgBA,EAASC,OAFzB,cAECC,EAFD,yBAIEA,GAJF,4C,sBCJA,SAASG,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAAQ,EACKC,mBAAS,IADd,mBACtBC,EADsB,KACXC,EADW,KAGvBC,EAAgBC,uBAAY,SAACP,GAAW,4CAC5C,4BAAAN,EAAA,sEAC+BK,EAASC,GADxC,OACQQ,EADR,OAGEH,EAAaG,GAHf,4CAD4C,uBAAC,WAAD,wBAO5CC,KACC,IAEH,OACE,qBAAKC,UAAU,WAAf,SACE,qBAAIA,UAAU,WAAd,UACE,sBAAKA,UAAU,WAAf,UACE,qBACEA,UAAU,aACVC,IAAKT,EAAKU,OACVC,IAAI,gBAEN,4CAAaX,EAAKY,QAClB,4CAAaZ,EAAKa,QAClB,4CAAab,EAAKc,QAClB,6CAAcd,EAAKe,YAErB,sBAAKP,UAAU,YAAf,UACE,wBAAQQ,KAAK,SAASC,QAAS,kBAAMb,EAAcJ,EAAKkB,KAAxD,6BAGA,6BACGhB,EAAUiB,KAAI,SAAAC,GAAI,OACjB,6BACE,4BAAIA,EAAKC,wBApBUrB,EAAKkB,I,MCdjC,SAASI,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC1B,OACE,oBAAIf,UAAU,YAAd,SACGe,EAAMJ,KAAI,SAAAnB,GAAI,OACb,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKkB,SCH7B,SAASM,IAAO,IAAD,EACcvB,mBAAS,IADvB,mBACbwB,EADa,KACFC,EADE,KAapB,OAVAC,qBAAU,WAAM,4CACd,4BAAAnC,EAAA,sEAC+BD,IAD/B,OACQqC,EADR,OAGEF,EAAaE,GAHf,4CADc,uBAAC,WAAD,wBAOdrB,KACC,IAGD,8BACE,cAAC,EAAD,CAAWgB,MAAOE,MChBxBI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0e2e4949.chunk.js","sourcesContent":["export const BASE_URL = 'https://5fca3e863c1c220016441fcc.mockapi.io/api/v1';\n","import { BASE_URL } from './api';\n\nexport async function getUsers() {\n  const response = await fetch(`${BASE_URL}/users`);\n  const result = await response.json();\n\n  return result;\n}\n","import { BASE_URL } from './api';\n\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     'Access-Control-Allow-Origin': 'https://.mockapi.io/api',\n//   },\n// };\n\nexport async function getPosts(userId) {\n  const response = await fetch(`${BASE_URL}/users/${userId}/posts`);\n  const result = await response.json();\n\n  return result;\n}\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport './User.scss';\nimport { getPosts } from '../../api/posts';\n\nexport function User({ user }) {\n  const [userPosts, setUserPosts] = useState([]);\n\n  const showUserPosts = useCallback((userId) => {\n    async function fetchData() {\n      const requestedPosts = await getPosts(userId);\n\n      setUserPosts(requestedPosts);\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"userCard\" key={user.id}>\n      <li className=\"userItem\">\n        <div className=\"userInfo\">\n          <img\n            className=\"userAvatar\"\n            src={user.avatar}\n            alt=\"User avatar\"\n          />\n          <p>{`Name: ${user.name}`}</p>\n          <p>{`Role: ${user.role}`}</p>\n          <p>{`City: ${user.city}`}</p>\n          <p>{`Phone: ${user.phone}`}</p>\n        </div>\n        <div className=\"userPosts\">\n          <button type=\"button\" onClick={() => showUserPosts(user.id)}>\n            Show user posts\n          </button>\n          <ul>\n            {userPosts.map(post => (\n              <li>\n                <p>{post.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </li>\n    </div>\n  );\n}\n\nUser.propTypes = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    role: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { User } from '../User';\nimport './UsersList.scss';\n\nexport function UsersList({ users }) {\n  return (\n    <ul className=\"usersList\">\n      {users.map(user => (\n        <User user={user} key={user.id} />\n      ))}\n    </ul>\n  );\n}\n\nUsersList.propTypes = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    role: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n).isRequired;\n","import React, { useState, useEffect } from 'react';\nimport { getUsers } from './api/users';\nimport './App.scss';\nimport './reset.scss';\nimport { UsersList } from './components/UsersList';\n\nexport function App() {\n  const [usersList, setUsersList] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const requestedUsers = await getUsers();\n\n      setUsersList(requestedUsers);\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <UsersList users={usersList} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}